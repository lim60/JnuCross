package com.finsupplychain.car.contractwrapper.xuperchain;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.jnu.jnucross.chains.FunctionResult;
import com.jnu.jnucross.chains.xuperchain.XuperChainWrapper;
import org.junit.Test;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * @author jessy-js
 * @ClassName EvidenceXCWrapper
 * @Date 2023/8/28 18:44
 * @Version V1.0
 * @Description
 */
public class EvidenceXCWrapper {
    public static String abi = "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"evidenceIndex\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"publicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"indiviSignature\",\"type\":\"string\"}],\"name\":\"addSignatures\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"orderIndex\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"evidenceDigest\",\"type\":\"string\"}],\"name\":\"newEvidence\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"evidenceIndex\",\"type\":\"uint256\"}],\"name\":\"queryEvidenceState\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"evidenceIndex\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"newState\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"evidenceDigest\",\"type\":\"string\"}],\"name\":\"updateEvidence\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]";
    public static String bin = "";
    public static String contractName = "EviContract";
    private static XuperChainWrapper xuperChainWrapper = XuperChainWrapper.build();
    /*{contractAccount=XC1234567890123456@xuper, txHash=d9101837ba4804861740b145be32061de496036ac611d99386a7a9bea5d92261}*/


    public void deploy(){
        Map<String, String> deployResult = xuperChainWrapper.deploy(bin, abi, contractName, new HashMap<String, String>());
        System.out.println(deployResult);
    }

    /*
    新建存证
     * @param orderIndex 订单在链上的唯一索引，用于关联订单实体
     * @param evidenceDigest 首次创建，"进口订单"的证据

     * @return FunctionResult，其中result 包括evidenceIndex 证据索引
     */
    public FunctionResult newEvidenceTC(BigInteger orderIndex, String evidenceDigest) throws JsonProcessingException {
        List<String> args = new ArrayList<>();
        args.add(String.valueOf(orderIndex));
        args.add(evidenceDigest);
        FunctionResult functionResult = xuperChainWrapper.send(abi, contractName, null, "newEvidence", args, false, null, false);
        System.out.println("----" + functionResult.result);
        System.out.println("----" + functionResult.transactionHash);
        return functionResult;

    }

    /*
    依据业务所处不同阶段，可由中海龙、客户、银行调用该函数
    * @param onChainIndex 证据索引
    * @param newState 新加入的证据状态，前端传入参数CustomCertificated，TaxCollected等
    * @param evidenceDigest 新加入的证据摘要


    * @return FunctionResult，其中，result包括 evidenceIndex 更新后的证据索引
    新增证据，包括 报关核验、完税、进口、到港、入库、放款、合同签订、还款、出库
    */
    public FunctionResult updateOCEvidence(BigInteger onChainIndex, String newState,  String evidenceDigest) throws JsonProcessingException {
        List<String> args = new ArrayList<>();
        args.add(String.valueOf(onChainIndex));
        args.add(newState);
        args.add(evidenceDigest);
        FunctionResult functionResult = xuperChainWrapper.send(abi, contractName, null, "updateEvidence", args, false, null, false);
        System.out.println("----" + functionResult.result);
        System.out.println("----" + functionResult.transactionHash);
        return functionResult;
    }

    public FunctionResult  queryOCEvidenceState(BigInteger onChainIndex) throws JsonProcessingException {
        List<String> args = new ArrayList<>();
        args.add(String.valueOf(onChainIndex));
        FunctionResult functionResult = xuperChainWrapper.send(abi, contractName, null, "queryEvidenceState", args, false, null, false);
        System.out.println("----" + functionResult.result);
        System.out.println("----" + functionResult.transactionHash);
        return functionResult;
    }

    /*
   法院实体对关联evidenceIndex的当前证据添加签名
   @param onChainIndex 证据链上唯一索引
   @param pubKey 法院链上账户公钥
   @param signature 由法院用上述公钥对应的私钥签名生成

   @return FunctionResult，其中，result包括pubKey和signature
   */
    public FunctionResult addSignatureOC(BigInteger onChainIndex, String pubKey, String signature) throws JsonProcessingException {
        List<String> args = new ArrayList<>();
        args.add(String.valueOf(onChainIndex));
        args.add(pubKey);
        args.add(signature);
        FunctionResult functionResult = xuperChainWrapper.send(abi, contractName, null, "addSignatures", args, false, null, false);
        System.out.println("----" + functionResult.result);
        System.out.println("----" + functionResult.transactionHash);
        return functionResult;

    }





}
