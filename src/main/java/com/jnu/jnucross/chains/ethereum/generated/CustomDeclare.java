package com.jnu.jnucross.chains.ethereum.generated;

import io.reactivex.Flowable;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple7;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.9.8.
 */
@SuppressWarnings("rawtypes")
public class CustomDeclare extends Contract {
    public static final String BINARY = "";

    public static final String FUNC_CREATECUSTOMFORM = "createCustomForm";

    public static final String FUNC_QUERYCUSTOMFORM = "queryCustomForm";

    public static final String FUNC_QUERYCUSTOMSTATE = "queryCustomState";

    public static final String FUNC_UPDATECUSTOMFORMSTATE = "updateCustomFormState";

    public static final Event VALUEINDEX_EVENT = new Event("ValueIndex", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
    ;

    @Deprecated
    protected CustomDeclare(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected CustomDeclare(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected CustomDeclare(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected CustomDeclare(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static List<ValueIndexEventResponse> getValueIndexEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(VALUEINDEX_EVENT, transactionReceipt);
        ArrayList<ValueIndexEventResponse> responses = new ArrayList<ValueIndexEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ValueIndexEventResponse typedResponse = new ValueIndexEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.formIndex = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public static ValueIndexEventResponse getValueIndexEventFromLog(Log log) {
        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(VALUEINDEX_EVENT, log);
        ValueIndexEventResponse typedResponse = new ValueIndexEventResponse();
        typedResponse.log = log;
        typedResponse.formIndex = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
        return typedResponse;
    }

    public Flowable<ValueIndexEventResponse> valueIndexEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(log -> getValueIndexEventFromLog(log));
    }

    public Flowable<ValueIndexEventResponse> valueIndexEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(VALUEINDEX_EVENT));
        return valueIndexEventFlowable(filter);
    }

    public RemoteFunctionCall<TransactionReceipt> createCustomForm(String orderId, String customNo, String customCode, String formDigest, String createTime, String certificateDigest) {
        final Function function = new Function(
                FUNC_CREATECUSTOMFORM, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(orderId), 
                new org.web3j.abi.datatypes.Utf8String(customNo), 
                new org.web3j.abi.datatypes.Utf8String(customCode), 
                new org.web3j.abi.datatypes.Utf8String(formDigest), 
                new org.web3j.abi.datatypes.Utf8String(createTime), 
                new org.web3j.abi.datatypes.Utf8String(certificateDigest)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Tuple7<String, String, String, String, String, String, String>> queryCustomForm(BigInteger formIndex) {
        final Function function = new Function(FUNC_QUERYCUSTOMFORM, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(formIndex)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        return new RemoteFunctionCall<Tuple7<String, String, String, String, String, String, String>>(function,
                new Callable<Tuple7<String, String, String, String, String, String, String>>() {
                    @Override
                    public Tuple7<String, String, String, String, String, String, String> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple7<String, String, String, String, String, String, String>(
                                (String) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (String) results.get(2).getValue(), 
                                (String) results.get(3).getValue(), 
                                (String) results.get(4).getValue(), 
                                (String) results.get(5).getValue(), 
                                (String) results.get(6).getValue());
                    }
                });
    }

    public RemoteFunctionCall<String> queryCustomState(BigInteger formIndex) {
        final Function function = new Function(FUNC_QUERYCUSTOMSTATE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(formIndex)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<TransactionReceipt> updateCustomFormState(BigInteger formIndex, String newOrderState) {
        final Function function = new Function(
                FUNC_UPDATECUSTOMFORMSTATE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(formIndex), 
                new org.web3j.abi.datatypes.Utf8String(newOrderState)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static CustomDeclare load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new CustomDeclare(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static CustomDeclare load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new CustomDeclare(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static CustomDeclare load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new CustomDeclare(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static CustomDeclare load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new CustomDeclare(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<CustomDeclare> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(CustomDeclare.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    public static RemoteCall<CustomDeclare> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(CustomDeclare.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<CustomDeclare> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(CustomDeclare.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<CustomDeclare> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(CustomDeclare.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    public static class ValueIndexEventResponse extends BaseEventResponse {
        public BigInteger formIndex;
    }
}
